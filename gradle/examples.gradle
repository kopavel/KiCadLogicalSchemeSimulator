/*
 * Copyright (c) 2024 Pavel Korzh
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
def scriptName = System.getProperty('os.name').toLowerCase().contains('win') ? 'run.bat' : 'run.sh'
def scriptPath = file("$rootDir/distro/$scriptName")
tasks.register('counters') {
    group = 'examples'
    dependsOn tasks.named('assemble')
    doLast {
        exec {
            workingDir "$rootDir/stuff/examples/counters"
            executable scriptPath
            args 'counters.net'
        }
    }
}
tasks.register('z80') {
    group = 'examples'
    dependsOn tasks.named('assemble')
    doLast {
        exec {
            workingDir "$rootDir/stuff/examples/z80"
            executable scriptPath
            args 'z80.net'

        }
    }
}
tasks.register('clock') {
    group = 'examples'
    dependsOn tasks.named('assemble')
    doLast {
        exec {
            workingDir "$rootDir/stuff/examples/clock"
            executable scriptPath
            args 'clock.net'

        }
    }
}
tasks.register('trs80') {
    group = 'examples'
    dependsOn tasks.named('assemble')
    doLast {
        exec {
            workingDir "$rootDir/stuff/examples/trs80"
            executable scriptPath
            args "TRS80I.net"

        }
    }
    dependsOn tasks.named('downloadCharGenBin')
    dependsOn tasks.named('downloadRomA')
    dependsOn tasks.named('downloadRomB')
}
tasks.register("downloadCharGenBin") {
    doLast {
        apply from: "$rootDir/gradle/utils.gradle"
        project.ext.downloadFileIfNotExists(
                "https://raw.githubusercontent.com/RetroStack/Character_Generator_ROMs/main/TRS-80%20Model%201/Individual/character_set_10.bin",
                file("$rootDir/stuff/examples/trs80/character_set_10.bin")
        )
    }
}
tasks.register("downloadRomA") {
    doLast {
        apply from: "$rootDir/gradle/utils.gradle"
        project.ext.downloadFileIfNotExists(
                "https://raw.githubusercontent.com/RetroStack/TRS-80-Model-I-System-ROMs/refs/heads/main/1-Option_2x64/rom_a_L2_v13.bin",
                file("$rootDir/stuff/examples/trs80/rom_a_L2.bin")
        )
    }
}
tasks.register("downloadRomB") {
    doLast {
        apply from: "$rootDir/gradle/utils.gradle"
        project.ext.downloadFileIfNotExists(
                "https://raw.githubusercontent.com/RetroStack/TRS-80-Model-I-System-ROMs/refs/heads/main/1-Option_2x64/rom_b_L2_v13.bin",
                file("$rootDir/stuff/examples/trs80/rom_b_L2.bin")
        )
    }
}
